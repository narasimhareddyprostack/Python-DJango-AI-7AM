Python is - General Purpose Programing Language.

Java  - OOP Languague
C     - Functional Programing Language
JS    - Scripting PL.

Good Morning - Java/Python/C/JS

Java
--------------
Test.java
class Test{
public static void mian(String[] args){
        
	System.out.println("Good Morning");
}
}

Guido Rossum - 
1991  - Python  1.x,2.x  
                3.x     -
1995  - Java


Where we can use Python?

#Developring - Web Application - DJango
#DevOPS
#Data Engineering
#Data Science(ML,NLP)
#Data Analytics
#Automation
#Networking Application
#AI  - Langgraph,LangChain
#Database 
-------------------------------------
Data       - Python
AI Agents  - Python
Fin/Banking/Defence/Airlines- Java(Access Modifiers)

Features of Python?

Simple and Easy to Learn?
--------------------------
Keywords

a=10
b=20
print(a+b)
-------------------------
free and Opensource

Interpreteded PL?

compiler based             Interpreted Based PL
----------------------------
converting High level to LowLevel

=========================================================

IDE - Integrated Dev Env
Notepad++
VS Code
Thonny
Google Colab
Jupyter notebook
Pycharm
-------------------
VS Code +co-piolor


Python Identifer Rules?
What is Identifier? Name in python Program

1.Identifier should contains only a-z, A-Z,0-9, _ 
2.Identifiers should not start with digits 0-9
3.Identifier should not contains any special char/symbols
4.Should not use  keyword/RW as identifer
5.Case Sentivie



class Test{}

class Test:
    pass        #To maintain dummy block

def login():
    pass

Indentiation - 4 spaces
--------------------------

def logout():
    print("Logout success")


def calc(a,b):
    return a+b


Python - inbuilt functions:
---------------------------
print()    - print in terminal/console
type()     - return data type
id()       - return address of the object
input()    - read data from user
len()
min()
max()
map()
filter()
-------Python Data type function----
int()
str()
float()
complex()
bool()
list()
tuple()
set()
dict()
bytes()
bytearray()
range()
frozenset()
nonetype()
================================
NameError
SyntaxError
IndentationEror
--------------

Python Data Types:

<class,int>
<class,float>
<class,str>
<class,complex>
<class,boolean>

<class,list>
<class,tuple>
<class,set>
<class,dict>

<class,bytes>
<class,bytearray>
<class,frozenset>
<class,range>
<class,noneType>

Python builtin function
--------------------------
print()
input()
id()
type()     - return the datatype

eid=101
print(type(eid))
-------------------------
Python List/set/tuple/bytes/ba/fz
group of elments/values as one entity

l = []
t = ()
s = {10}
d = {}


a=10

==================================================
create		read	update		delete


Python St
Pyton Identifies and rules
Python Keywords
Python Data types
----------------------------
Python Inbuilt function
------------------------
print()       -
input()       -data from user. str type
type()        - return the data type
id()          - return the address of object
min()         
max()
len()         - return the size of seq
-----------------
int()     <class,int>
float()
str()
complex()
bool()
list()
set()
tuple()
dict()
bytes()
bytearray()
frozenset()
range()
nonetype()
===============
int()  - function
How to represent int data type.
using 
decimal format      : 0 - 9       
binary format       : 0,1         0b / 0B
octal format        : 0-7         0o / 0O
hexdecimal format   : 0-9,a,b,c,d,e,f/A,B,C,D,E,F  0x/0X

a=15
b=0b1111
c=0o17
d=0xf

float() 
bool()
complex()
str()
===================
a=float(10)
print(a)


bool()  - any type to bool type.

print(bool(100))  


complex data type
10+20j
0+0.5J  = 0 

=================================
Mutable vs           Immutable object
list                     
set
dict
bytearray


a=100
a=200


Data Type & It functions.
=========================
Python Errors:
--------------------
SyntaxError
NameError
IndentationError
TypeError

ValueError
KeyError
AttributeError
IndexError
-------------------------------
class-5 Operators?

Arithmatic Operators  : +,-,*,/,% ,  //, ** 
Logical Operators     : and or not 
Relational            : <, <=, >,>=, ==, != 
Assignment            : = 
Membership            : in , not in  
Identity OPerator     : is, is not 
Bitwise Operator      :


write one example - relation and logical operator?

Check given number is 3 digit number or not?
100 to 999

num = int(input("Enter Number"))
print(num>=100  and num<=999)

What is Membership operator?   in, not in
If you want  to verify 
element/object/value present in sequence or not?

What is sequence?
list
tuple
set
str
bytes          0-255
bytearray      0-255  
range           
frozenset      


===========================
class-6
Membership Op : in , not in - 
Identity   Op : is , is not - Ref comparision
------------------------------------
element/dict/user/object/value/char  - present in seq
Seqeence might be - List,set/tuple/string/b/ba/fz/range
--------------------------------------------------------
list=[10,20,30,40,{},{10}]
tuple=(10,20,30)
set={10,10,10,10}
str="Rahul"

print(10 in list)

#Read two/three integer numbers from user, 
print min and max value 
===========================================
#prnit min value from 3 number
a=int(input("Enter First Number:"))
b=int(input("Enter Sec Number:"))
c=int(input("Enter Third Number:"))

#min_value = a if a<b and a<c else b if b<c else c 
print(min(a,b,c))

#print(min_value)
=============================================
Control St:

Verify - given is 3 digit not or not
verify - given is even or add number using if-else st


num=int(input("Enter Number:"))

if cond st:
   print("Even Number")
else:
   print("Odd Number")



if "Salaman":
    print("Still Bachelor")
else:
    print("We dont know!")

Iterative St:
if you want to execute block of code/iterate python collection/seq

for loop
while loop
===========================

For Loop:

range(): - generate sequence of numbers
1,2,3,4,5
10,20,30,40
5,10,15,20,25
3,6,9,12,15
syntax 
range([start],end,[step])

range(5)       - range(0,5,+1)
range(100,200) - range(100,200,+1)
range(10,41,10)-range(10,41,10)
range(3,16,3)  -range(3,16,3)
Note: End value - excluding mean -1
-------------------------------------------
print 1 to 10
print 10 to 20
print 5,10,15,....50

for num in range(1,11,1):
	print(num)
==============================
for loop: iterate your sequences
Sequence might be - list,set,tuple,str,bytes,ba,fz,range

elements=[10,20,30,40,{},{10}]
numbers=(10,20,30)
ids={10,10,10,10}
ename="Rahul"



==============================
How to read command line arguments? 
What is command line arguments
How to read data from user? using input() function.


List: group of elements as one entity

create  
numbers=[0,100,200,300]
read:
numbers[0]   0
numbers[1]   100
numbers[2]   200
numbers[3]   300 

list - slice
numbers[1:]


for loop- iterate your sequences
list/tuple/set/str/bytes/ba/fz/range

While Loop?
-----------

Break st:we are using breack st inside loops to break loop execution based on condition

continue st: skip current iteration and execute next based on condtion.


numbers=[0,1,2,3,4,5,6,7,8,9]
for num in numbers:
	print(num)

================================
Python Identifiers and Rule
Keywords  - 35
Data Type - ename="Rahul" / 14 
Mutable and Immutable
Operators
Controll Flow st(Conditional and iterative st)
Command Line Argv
Python Error and inbuilt function
-------------------------------
Python Module 
Functions
List,tuple,set,duct,str
Error Handling - try,except,finally,raise
File Handling - JSON,CSV 
DB Handling  - PDBC
ETL - cloud
AWS  - boto3
DJango Framework
------------------------------
import keyword
print(keyword.kwlist)

import sys 
print(sys.argg)

------------------------------
What is Module?
Every Py file acting module.
Module contains 
varaibles
function
class,
object

Module members -

Inbuilt Modules?
----------------
json
csv
requests
re
math
random
os
sys
keyword

how to display - module members?
--------------------------------
dir()  - inbuilt function
print()
input()
id()
type()
min()
max()
len()

how to import modules?  from and import keyword
-----------------------------
import module1,module2,module3
import module1 as m1, module2 as m2
from module import member1,member2,member3
from module import *
from module import member1 as m1, member2 as m2

=========================
generate 10 - 4 digit OTP numbers using random module.

What is random module?
generate random number.

randint()
random()
choises()
randrange()
etc
-============
os.platform - Js
os.
--------------
math
random
os
keyword
===========================

Variable  - Property
function  - method
class     - variables + Methods
object
================================

eid=101 
[].append()

def append():
    pass

class List:

    def append():
    pass
---------------------------
User Module 
Registration()
Login()
logout()
forgetpwd()
updteProfile()

function: group of statement for specific purpose
	  and execute business logic , 
	  return result/value


create
---------
def login():
    print("GM")
    print("GA")
    print("GE")
   

login()
===========================
Top 25 Python - Error
SE
IndetationError
NameError
ValueError          int("100")   int("Rahul")
IndexError
TypeError
KeyError
AttributeError
FNFError
FEError
ZeroDivisionError


def  append():
	      pass

class List:
	def  append():
	      pass

List Data Strcture?
------------------
if you want represent
-group of elements as on entity
-where duplicates are allowed and
-allowed heterogenous elements
-list elements are storing based on indexing
Note: -ve indexing is also possible.
-insertion order/order maintained
-List is iterable object,we can iterate using 
a)for loop
b)while loop
-List is mutable object
List Methods:











Tuple Data Strcture?
-------------------
if you want represent
-group of elements as on entity
-where duplicates are allowed and
-allowed heterogenous elements
-Tuple elements are storing based on indexing
Note: -ve indexing is also possible.
-insertion order/order maintained
-Tuple is iterable object,we can iterate using 
a)for loop
b)while loop
Note:
-Tuple is Immutable object
-Tuple - readonly vesion of list

Tuple Methods:
t.index(elemement)
t.count()


Set Data Strcture?
------------------
-group of elements are one entity
-where duplicates are not allowed but
-heterogenous elements are allowed.
-indexing concept is not applicable.
-insertion order not guarantee.
-we can iterate using - for loop
-set is Mutable object

s1={}  

Set Methods:




s1.remove(element)
s1.dicard(element)
- remove specified element from set object.

s1.remove(ele) :method - If element not present in set object
it return error - KeyError: 'NM'

s1.dicard(ele): method - If element not present in set object
it wont return any error.

=============
when to use - list, set:
If you want maintain uniqueness?

Database
Customer 1000  
	     multiple addresses- 1500

Message to all my customers?

Process my data - using set object
-------------------------------
Python dict:
{'eid':101,'ename':'Rahul'}
-group of key:value pair as one entity
-group of properties(name:value)
-duplicate keys are not allowed 
 but duplicate values are allowed
-indexing concept not application.
=====================================

File Handling in Python
text File
----------
.txt
.json
.csv
---------
binary files
.jpg/.png
.mp4
Databases- PDBC


fp=open('data.txt','r')
#to know about fp file pointer info.
print(fp.name)    #data.txt
print(fp.mode)    # r 
print(fp.readable()) #True
print(fp.writable()) #False
print(fp.closed)     #False
fp.close()
print(fp.closed)     #True
-------------------------
Backend Dev  - Rest API
JSON - javascript object notation
JS Data Type:


ETL

Extract -from cloud/DWH/Database/File systems
Transform - apply  
Load   -into cloud/databases/FS
=========================
Text Files    -  r,r+,w,w+,a,a+,x
Binary Files  -  rb,rb+,wb,wb+,ab+,xb

Text   Files  -  .txt,.json, .csv etc
Binary Files  -  .jpg,.jpeg, png, mp4,mp3
========================================
JSON Data
To exchage data between software components
XML 
JSON
CSV
----------------------------------------
JSON - load(),dump(),loads(),dumps()  
CSV  - writer(),reader()
       writerrow()
       writerows()
--------------------------------------
Extract
Tranform
Load
--------------------------------------
how to handle CSV files(read and write)
comma seperate version


Python Modules
--------------
math
random
csv
json
os
pathlib
sys
keyword
functools
-----------------
How to invoke rest API in Python?
requests module?
Rest API - 
How to rest rest API? tools  post man tools

Rest API Methods
GET    - read
POST   - create
PUT    - update
DELETE - delete
-----------------------------------------
Rest API URL: http://www.flipkart.com/users
Method Type : GET
Required Fields: None
Access Type: Public

Rest API URL:http://www.flipkart.com/user/login
Method Type :POST
Required Fields:email,password
Access Type:Public

How to consume Rest API in Frontend 
and 
Python - using requests module


Rest API URL: https://jsonplaceholder.typicode.com/users
Method Type : GET
Required Fields: None
Access Type: Public
---------------------------------------
Task -1 :
invoke/consume below Rest API
and write user data into new user.json and user.csv file

Rest API info:
Rest API URL: https://jsonplaceholder.typicode.com/users
Method Type : GET
Required Fields: None
Access Type: Public

how to consume/invoke rest api - requests module
how to write users list data into json file - json module
how to write users data into csv file - csv module


Task2:
======================================
function?

def fun1(a,b,c):
	st1
	st2
	st3
fun1()
fun1(10,20,30)
function Agrument type:
positional
keyword
default arg
var lenght arg
----------------------------------
How to invoke inner function from outside?
if you want invoke inner  function from outside?

return the inner function ref.
with help of inner function ref.
-----------------------------------
lambda expression/nameless function/nested function
------------------------------

map()    - to create new seq based on condition
filter() - to filter values/elements of given sequence 
           based on condition
reduce() - 

[10,20,30,40]
[11,21,31,41]
---------------------------------------------------
map_obj=map(func,seq)
filter_obj=filter(func,seq)
reduce(func,seq) - 
reducer is function, reducer into sigle element of 
given sequence based on condition.
==================================================
reduce()  from functools module
======================================
Error Handling
Syntax Errors
RuntimeError/Exception
Why we need to handling Error/Exceptions
To avoid program termination abnormally!
Successfull termination of program


try:
    Risky code
except:
    Handling Code
finally:
    mandatory code
raise:
    hanlding custom error

Write few example : error:

SyntaxError
IndentationError
TypeError
ValueError
IndexError
AttributeError
NameError
ZeroDivitionError
FNFError
FEError
====================




SyntaxError -   
RunTimeError - user input, programing logic and memory
Exceptions

one.py
------

class yeild:
     pass 

How to handle error in python?
-----------------------------
try
    #risky code 
except
    #handling code
finally
    #mandataroy st
raise
    # for throwing Custom Errors

===================================
class -21

OOP- to Solve real world Problem using Object.

What is object?
how to create object?

Manufacturing - 1000 Laptops/Water Tank.

1000 Lt
2000 LT
3000 Lt 
500  Lt   Mould  - Iron/

Mould/Plan/Design/draft/class
--------------------------------

class is template/DT/Design/Plan to construct object.
Once object are created memory location allowcated.

class Account:
     pass




How to access class Members?using - object.


=======================================

class- Variable and Methods
Variable - 3 Types(instance Var,class var,local)
Methods  - 3 Types(instance methods,class methods,static methods)

Instance Variable?
  If varaiable value is varied from object to object - we go with instance variable
	
	Inside a class - using self keyword
	outside a class -using object
	ex:eid,ename,esal - 
	Note: Separate copy will create for every object
Class Variable?
  If variable value is not varied from object to object.
	ex:org_Name, min_bal, branch_Name,bank_name
	Note:only one copy will craete @class level and shared to every object.

Local Variable?


Specail Method ie : constrctor method.
=======================================
What is constructor?

specail method to initlize object values.
constructor method will execute automatically only once 
at time of object creation.

Note: we cont invoke constructor method explicitly.

Object Oriented Programming features

Abstraction?
Encapsulation?
Inheritance?
Polymorphism
==============================
Inheritance? 
Inheriting the properties from one class to another class.
or
Resuing exesting class functionality and adding new features.

Note: Code resuability

Type Inheritance?
Note: Python supports all kind of inheritances 
      except cyclic inheritance.

Single Ineritance  Multiple  Multi-Level Hybird & Heirachry Intance

========================================

Abstraction   - Hiding Essential details  @absractmethod
Encapsulation - binding data and methods as single unit. 
Inheritance   - Inheriting properties from one class 
                to another class.
Polymorphism  - Object acting as many form
              - Operator
	
Abstract class   : any class contains zero or more abstract method
abstract method  : if dont know about proper impl logic


===========================================
PDBC
	Files
	Database

data.txt/data.pdf
Mysql/Oracle DB/MongoDB

a=100

=========================================
Mysql                       MongoDB

CRUD
---------------------------------------
